---
authentication_backend:
  ldap:
    address: ldap://lldap.security.svc.cluster.local:5389
    implementation: custom
    timeout: 5 seconds
    start_tls: false
    base_dn: dc=home,dc=arpa
    additional_users_dn: ou=people
    users_filter: (&({username_attribute}={input})(objectClass=person))
    additional_groups_dn: ou=groups
    groups_filter: (member={dn})
    group_search_mode: filter
    user: uid=authy,ou=people,dc=home,dc=arpa
    attributes:
      username: uid
      display_name: displayName
      mail: mail
      group_name: cn

session:
  name: authelia-home-ops
  same_site: lax
  inactivity: 5m
  expiration: 1h
  remember_me: 1M
  cookies:
    - name: authelia_session
      domain: ${SECRET_DOMAIN}
      authelia_url: https://auth.${SECRET_DOMAIN}
      default_redirection_url: https://${SECRET_DOMAIN}
  redis:
    host: dragonfly.dbms.svc.cluster.local
    port: 6379
    database_index: 2

notifier:
  disable_startup_check: false
  smtp:
    subject: '[Authelia] {title}'
    disable_require_tls: true

default_2fa_method:
  totp

duo_api:
  disable: true

access_control:
  ## Default policy can either be 'bypass', 'one_factor', 'two_factor' or 'deny'. It is the policy applied to any
  ## resource if there is no policy to be applied to the user.
  default_policy: two_factor
  networks:
    - name: private
      networks: [10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16]
    - name: vpn
      networks: [10.10.0.0/16]
  rules:
    # bypass Authelia WAN + LAN
    - domain:
        - auth.${SECRET_DOMAIN}
      policy: bypass
    # One factor auth for LAN
    - domain:
        - "*.${SECRET_DOMAIN}"
      policy: one_factor
      subject: [group:admins, group:users]
      networks:
        - private

identity_providers:
  oidc:
    jwks:
      - key: {{ secret "/config/secret/OIDC_JWKS_KEY" | mindent 10 "|" | msquote }}
    cors:
      endpoints: [authorization, token, revocation, introspection]
      allowed_origins_from_client_redirect_uris: true

    clients:
      - client_name: Grafana
        client_id: Grafana
        client_secret: {{ secret "/config/secret/GRAFANA_OAUTH_CLIENT_SECRET_DIGEST" }}
        public: false
        authorization_policy: two_factor
        require_pkce: true
        pre_configured_consent_duration: 1y
        scopes: [openid, profile, groups, email]
        redirect_uris: ["https://grafana.${SECRET_DOMAIN}/login/generic_oauth"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic

      - client_name: pgAdmin
        client_id: pgadmin
        client_secret: {{ secret "/config/secret/PGADMIN_OAUTH_CLIENT_SECRET_DIGEST" }}
        public: false
        authorization_policy: two_factor
        scopes: [openid, profile, email]
        redirect_uris: ["https://pgadmin.${SECRET_DOMAIN}/oauth2/authorize"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_basic

      - client_name: hoarder
        client_id: Hoarder
        client_secret: {{ secret "/config/secret/HOARDER_OAUTH_CLIENT_SECRET_DIGEST" }}
        public: false
        authorization_policy: one_factor
        scopes: [openid, profile, email]
        redirect_uris: ["https://hoarder.${SECRET_DOMAIN}/api/auth/callback/custom"]
        userinfo_signed_response_alg: none
        grant_types: authorization_code

      - client_name: lubelog
        client_id: Lubelog
        client_secret: {{ secret "/config/secret/LUBELOG_OAUTH_CLIENT_SECRET_DIGEST" }}
        public: false
        authorization_policy: one_factor
        require_pkce: true
        pre_configured_consent_duration: 1y
        scopes: [openid, profile, email]
        redirect_uris: ["https://lubelog.${SECRET_DOMAIN}/Login/RemoteAuth"]
        userinfo_signed_response_alg: none
        token_endpoint_auth_method: client_secret_post

      - client_id: mealie
        client_name: Mealie
        client_secret: {{ secret "/config/secret/MEALIE_OAUTH_CLIENT_SECRET_DIGEST" }}
        public: false
        authorization_policy: two_factor
        require_pkce: true
        pkce_challenge_method: S256
        scopes: [openid, profile, email]
        redirect_uris: ["https://mealie.${SECRET_DOMAIN}/login"]
        userinfo_signed_response_alg: none
